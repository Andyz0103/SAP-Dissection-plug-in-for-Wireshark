language: cpp
compiler:
  - clang
  - gcc
env:
  global:
    - WIRESHARK_BRANCH=master-1.10
  matrix:
    - BUILD_CMAKE=no
    - BUILD_CMAKE=yes
before_install: 
  - sudo apt-get update -qq
  - sudo apt-get install libglib2.0-dev libpcap-dev flex bison make -qq
  - sudo apt-get build-dep wireshark -qq
  - mkdir ${HOME}/wireshark-$WIRESHARK_BRANCH
  - cd ${HOME}/wireshark-$WIRESHARK_BRANCH
  - git init
  - git remote add -t $WIRESHARK_BRANCH -f origin https://github.com/wireshark/wireshark
  - git checkout $WIRESHARK_BRANCH
  - mkdir plugins/sap
  - cp $TRAVIS_BUILD_DIR/* plugins/sap/
  - git apply $TRAVIS_BUILD_DIR/wireshark.patch
install:
  - if [ ${BUILD_CMAKE} == "yes" ]; then mkdir build && cd build && cmake -DBUILD_wireshark=OFF -DBUILD_tshark=OFF -DBUILD_rawshark=OFF -DBUILD_dumpcap=OFF -DBUILD_text2pcap=OFF -DBUILD_mergecap=OFF -DBUILD_reordercap=OFF -DBUILD_editcap=OFF -DBUILD_capinfos=OFF -DBUILD_randpkt=OFF -DBUILD_dftest=OFF ..; else ./autogen.sh && ./configure --disable-wireshark --disable-tshark --disable-editcap --disable-capinfos --disable-mergecap --disable-dumpcap --disable-reordercap --disable-text2pcap --disable-randpkt --disable-dftest; fi
script: 
  - if [ ${BUILD_CMAKE} == "yes" ]; then make sap; else make -C plugins/sap; fi
